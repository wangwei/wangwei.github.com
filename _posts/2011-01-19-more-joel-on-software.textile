---
layout: post
title: 《软件随想录》小记
category: reading
---

非常感谢<a href="http://www.ruanyifeng.com/blog/2009/12/chinese_version_of_mjos_is_on_sale.html">阮一峰老师</a>用心的翻译。读起来完全没有生硬感，专有名词翻译地也很到位，还有很多贴心的脚注。

读完此书，对Joel的文章最大的感触是：观点鲜明，语言风趣，见解独到，(虽然有点拖泥带水的感觉，XDD)。简单摘录几段：

* 如果要让程序员高效地工作，你就必须要给予他们安静和宽敞的工作环境，比如私人办公室
* 让程序员干有趣的活是吸引优秀程序员最好的方法之一
* 让一流的新员工挑选自己的喜欢的项目
* 思考你得公司代表了怎样的追求，这种追求是怎样形成的，又是怎样被别人感受到的
* 程序员其实不在乎钱，除非你在其他事情上搞杂了。如果有人在抱怨薪水，而以前并没有出现这种情况，这经常是一种信号，表明人们并不真正喜欢他们的工作
* 大家坐在一起吃饭，感觉像个大家庭。创造一个有凝聚力的像胶水粘在一起的团队
* 指针和递归的真正价值在于那种你在学习它们的过程中所得到的思维深度
* 公司之所以需要管理，就是为了不影响聪明人的工作，让他们把事情做完
* 能不能清晰地写出技术文章，决定了你是一个口齿不清的程序员还是一个领袖。如果不是Linus Torvalds不断地散步福音，请问Linux操作系统会成功吗？虽然他是一个非常聪明的计算机天才。但是Linux吸引来全世界一大批志愿者的真正原因是Linus Torvalds的表达能力
* 当你改正了一个又一个小细节后，当你磨光，定型，擦亮，修饰你的产品的每一个小边角后，就会有神奇的事发生。你最后拿出来的是一件真正优秀的作品。它第一眼就让人觉得震撼，出类拔萃，工作起来完全符合直觉
* 世界上只有一件事比你自己设计软件更困难，那就是一个团队一起设计软件
* 最让我抓狂的就是有些开发团队养成了一个坏习惯，每次需要做决定时就开会
* 太多的选择最终限制了我们的自由，而不是解放了我们
* 避开攻击的最好方法之一，是让它看上去好像获得了成功
* 良好的社会化界面设计会创造更多的价值
* 如果你让某个功能很容易操作，人们就愿意使用它。通过这种方式，你能够暗中鼓励人们按预想的方式使用
* 空酒馆效应
* 解决轻而易举的事情是拿不到钱的，要挣钱，就别怕脏
* 如果你想保持增长，不管是个人，还是公司。唯一的方法就是扩张自己擅长处理的业务边界，除非故意要保持公司的小型化
* 如果日程规划是以"天"为单位，甚至以"周"为单位，我就认定它是没用的，你必须将日程规划分解成一些非常小的任务，这些任务能够在以"小时"为单位的时间段中完成，不能有任何任务所需的时间超过16小时
* 最好的工作条件 -> 最好的程序员 -> 最好的软件 -> 利润
* 如果你想压低程序员的工资，那你就会得到质量很垃圾的软件，而这实际上也不会为你省下很多钱
* 布鲁克斯法则：向一个已经延误的软件项目中增加人手，只会使他更加延误
* 一个优秀的程序员独自完成一项任务，就不需要额外的沟通和协调。如果同样的任务让5个程序员一起完成，他们之间就必须沟通和协调，这会花掉大量时间
* 用许多平庸的程序员取代少数优秀的程序员，这种做法的真正问题在于不管平庸的程序员工作多长时间，他们做出来的东西无法像优秀程序员做得那样好
* 你的公司的成功，依赖于程序员真正以办公室为家的程度
